import java.util.*;
import java.io.*;

public class MiniStudentSystem {
    static ArrayList<String> students = new ArrayList<>();
    static HashMap<String, List<String>> courses = new HashMap<>();
    static Scanner sc = new Scanner(System.in);

    public static void main(String[] args) {
        while (true) {
            System.out.print("\n1.Add 2.SearchStudent 3.SearchCourse 4.Delete 5.Save 6.Exit: ");
            switch (sc.nextInt()) {
                case 1 -> addStudent();
                case 2 -> searchStudent();
                case 3 -> searchCourse();
                case 4 -> deleteStudent();
                case 5 -> saveToFile();
                case 6 -> System.exit(0);
            }
        }
    }

    static void addStudent() {
        sc.nextLine();
        System.out.print("Name: ");
        String name = sc.nextLine();
        if (students.contains(name)) { System.out.println("Exists."); return; }
        students.add(name);
        System.out.println("Enter courses (comma separated): ");
        String[] cs = sc.nextLine().split(",");
        courses.put(name, Arrays.asList(cs));
    }

    static void searchStudent() {
        sc.nextLine();
        System.out.print("Search Name: ");
        String name = sc.nextLine();
        System.out.println(courses.containsKey(name) ? "Courses: " + courses.get(name) : "Not found.");
    }

    static void searchCourse() {
        sc.nextLine();
        System.out.print("Search Course: ");
        String course = sc.nextLine();
        boolean found = false;
        for (var e : courses.entrySet())
            if (e.getValue().contains(course)) { System.out.println(e.getKey()); found = true; }
        if (!found) System.out.println("No student found for course.");
    }

    static void deleteStudent() {
        sc.nextLine();
        System.out.print("Delete Name: ");
        String name = sc.nextLine();
        if (students.remove(name)) { courses.remove(name); System.out.println("Deleted."); }
        else System.out.println("Not found.");
    }

    static void saveToFile() {
        try (BufferedWriter w = new BufferedWriter(new FileWriter("courses.txt"))) {
            for (var e : courses.entrySet())
                w.write(e.getKey() + ": " + e.getValue() + "\n");
            System.out.println("Saved to courses.txt");
        } catch (IOException e) { System.out.println("Error: " + e); }
    }
}
